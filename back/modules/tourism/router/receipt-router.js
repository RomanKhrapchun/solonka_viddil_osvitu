const { RouterGuard } = require('../../../helpers/Guard');
const { accessLevel } = require('../../../utils/constants');
const { viewLimit, insertLimit, updateLimit } = require('../../../utils/ratelimit');
const receiptController = require('../controller/receipt-controller');

const routes = async (fastify) => {
    // üìã –°–ø–∏—Å–æ–∫ –∫–≤–∏—Ç–∞–Ω—Ü—ñ–π –¥–ª—è –∞–¥–º—ñ–Ω –ø–∞–Ω–µ–ª—ñ - –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∑ ReceiptList
    fastify.post("/receipts/list", { 
        preParsing: RouterGuard({ 
            permissionLevel: "receipt", 
            permissions: accessLevel.VIEW 
        }),
        config: viewLimit
    }, receiptController.getReceiptsList);

    // üìÑ –û—Ç—Ä–∏–º–∞–Ω–Ω—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó - –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∑ ReceiptForm –ø—Ä–∏ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—ñ
    fastify.get("/receipts/:id", { 
        preParsing: RouterGuard({ 
            permissionLevel: "receipt", 
            permissions: accessLevel.VIEW 
        }),
        config: viewLimit
    }, receiptController.getReceiptById);

    // ‚ûï –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–æ—ó –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó - –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∑ ReceiptForm
    fastify.post("/receipts", { 
        preParsing: RouterGuard({ 
            permissionLevel: "receipt", 
            permissions: accessLevel.INSERT 
        }),
        config: insertLimit
    }, receiptController.createReceipt);

    // ‚úèÔ∏è –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–≤–∏—Ç–∞–Ω—Ü—ñ—ó - –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∑ ReceiptForm
    fastify.put("/receipts/:id", { 
        preParsing: RouterGuard({ 
            permissionLevel: "receipt", 
            permissions: accessLevel.UPDATE 
        }),
        config: updateLimit
    }, receiptController.updateReceipt);

    // üì• –ï–∫—Å–ø–æ—Ä—Ç –∫–≤–∏—Ç–∞–Ω—Ü—ñ–π - –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –∑ ReceiptList 
    fastify.post("/receipts/export", { 
        preParsing: RouterGuard({ 
            permissionLevel: "receipt", 
            permissions: accessLevel.VIEW 
        })
    }, receiptController.exportReceipts);

    
    fastify.post("/scan-activity/list", { 
        preParsing: RouterGuard({ 
            permissionLevel: "receipt", 
            permissions: accessLevel.VIEW 
        })
    }, receiptController.getScanActivitiesList);


};

module.exports = routes;